# A Quick Sample

Saturn is a tool to manage data, information, and actionable code in one place.
Each note consists of a single text file which contains markdown-like literate Ruby (language subject to change).
A standard Saturn Code Block is denoted by lines containing only `% ruby` and `% end`.
% ruby
greeting = "hello"
glue = ", "
name = "world"
puts(greeting + glue + name)
% end

Standard Saturn Code Blocks display their contents the same way a markdown code fence does.
Any `$stdout` that the code generates is displayed directly afterwards as if it was the markdown-like part of the file.

In the event that some code may be awkwardly long (eg. data) abbreviated Saturn Code Blocks can be denoted by lines containing only `% hidden ruby` and `% end`.
% hidden ruby
some_data = %w(foo bar baz)
% end

To allow for more composable documents, the ruby blocks (standard and hidden) are executed as if they were concatenated.
The separation throughout the document only serves the purpose of determining where `$stdout` is displayed in the output view.

% hidden ruby
puts("here's some data from a previous cell:")
some_data.each do |data|
  puts("- #{data}")
end
% end

To run this sample Saturn file, you can run `ruby saturn.rb < sample.saturn`, then copy the output to a markdown parser. Additionally, you can use pandoc to transpile a saturn file into an html document (styled and everything!) with:
```
$ ruby saturn.rb < sample.saturn           \
  | pandoc -f gfm                          \
           -t html                         \
           --metadata title=titleName      \
           --template=saturn               \
  > output.html
```
